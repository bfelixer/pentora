name: âœ¨ Feature Request
description: Suggest a new feature or enhancement for Pentora
title: "[Feature]: "
labels: ["enhancement", "needs-triage"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thanks for suggesting a feature! Please describe your idea in detail.

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How important is this feature?
      options:
        - ðŸ”´ Critical (required for production use)
        - ðŸŸ¡ High (significant value, many users benefit)
        - ðŸŸ¢ Medium (nice to have, some users benefit)
        - âšª Low (minor improvement)
    validations:
      required: true

  - type: dropdown
    id: component
    attributes:
      label: Component
      description: Which part of Pentora is this for?
      options:
        - Scanner (port scanning, discovery)
        - Engine (DAG, orchestrator, modules)
        - Plugin System (loader, cache, evaluator)
        - CLI (commands, flags, output)
        - Server (API, UI, background jobs)
        - Storage (workspace, scans, data persistence)
        - Configuration (config files, env vars)
        - Documentation
        - Other
    validations:
      required: true

  - type: textarea
    id: problem
    attributes:
      label: Problem Statement
      description: What problem does this feature solve?
      placeholder: |
        Currently, there's no way to schedule automatic scans. Users have to manually run scans or set up external cron jobs.
    validations:
      required: true

  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: How should this feature work?
      placeholder: |
        Add a `pentora schedule` command that allows users to configure recurring scans:

        ```bash
        pentora schedule add \
          --name "daily-scan" \
          --targets "192.168.1.0/24" \
          --cron "0 2 * * *" \
          --notify email
        ```

        The scheduler would:
        - Store schedule configs in workspace
        - Run as background service (server mode)
        - Support cron expressions
        - Send notifications on completion
    validations:
      required: true

  - type: textarea
    id: alternatives
    attributes:
      label: Alternatives Considered
      description: What other approaches did you think about?
      placeholder: |
        Option 1: External cron + pentora CLI (current workaround)
        Option 2: Integration with system schedulers (systemd timers, launchd)
        Option 3: Built-in scheduler (proposed)

  - type: textarea
    id: benefits
    attributes:
      label: Benefits
      description: Why is this valuable?
      placeholder: |
        - Simplifies deployment (no external scheduler setup)
        - Better integration with Pentora (workspace, reporting)
        - Built-in notification system
        - Easier for non-technical users

  - type: textarea
    id: examples
    attributes:
      label: Usage Examples
      description: Show how users would use this feature
      placeholder: |
        ```bash
        # Create a schedule
        pentora schedule add --name "nightly" --targets "prod.yaml" --cron "0 2 * * *"

        # List schedules
        pentora schedule list

        # View schedule details
        pentora schedule get nightly

        # Delete schedule
        pentora schedule delete nightly

        # Run scheduler daemon
        pentora server start --enable-scheduler
        ```

  - type: textarea
    id: api-design
    attributes:
      label: API/CLI Design (Optional)
      description: Proposed commands, flags, or API endpoints
      placeholder: |
        CLI Commands:
        - `pentora schedule add [flags]`
        - `pentora schedule list`
        - `pentora schedule get <name>`
        - `pentora schedule delete <name>`
        - `pentora schedule pause <name>`
        - `pentora schedule resume <name>`

        Server API:
        - POST /api/v1/schedules
        - GET /api/v1/schedules
        - GET /api/v1/schedules/{name}
        - DELETE /api/v1/schedules/{name}

  - type: textarea
    id: config
    attributes:
      label: Configuration (Optional)
      description: Required config options
      placeholder: |
        ```yaml
        schedules:
          enabled: true
          storage: workspace
          max_concurrent: 3
          notifications:
            - type: email
              smtp: smtp.example.com
        ```

  - type: textarea
    id: implementation
    attributes:
      label: Implementation Notes (Optional)
      description: Technical considerations or challenges
      placeholder: |
        - Use github.com/robfig/cron for scheduling
        - Store schedules in workspace/schedules/*.yaml
        - Integrate with existing jobs manager (pkg/server/jobs)
        - Support multiple notification channels (email, webhook, Slack)

  - type: textarea
    id: dependencies
    attributes:
      label: Dependencies
      description: What other features/issues does this depend on?
      placeholder: |
        - Requires server mode (#13)
        - Depends on notification system (not yet implemented)
        - Related to #15 (scan history)

  - type: dropdown
    id: breaking
    attributes:
      label: Breaking Change?
      description: Would this break existing functionality?
      options:
        - "No"
        - "Yes - requires migration"
        - "Yes - deprecates old behavior"
        - "Maybe"
    validations:
      required: true

  - type: checkboxes
    id: willingness
    attributes:
      label: Contribution
      description: Would you like to implement this?
      options:
        - label: I'm willing to submit a PR for this feature
        - label: I need guidance on implementation
        - label: I can help with testing
        - label: I can help with documentation

  - type: textarea
    id: additional-context
    attributes:
      label: Additional Context
      description: Any other relevant information
      placeholder: Similar features in Nmap, Nuclei, or other tools
